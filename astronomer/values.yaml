#################################
### Astronomer global configuration
#################################
global:
  enableArgoCDAnnotation: true # for ArgoCD
#  fluentdEnabled: false
#  loggingSidecar:
#    enabled: true
#    name: sidecar-log-consumer
  deployRollbackEnabled: true
  # Base domain for all subdomains exposed through ingress
  baseDomain: argocd.aws.astronomer-demo.com

  # Name of secret containing TLS certificate
  tlsSecret: astronomer-tls
  dagOnlyDeployment:
    enabled: true

  # Enable privateCaCerts only if your enterprise security team
  # generated a certificate from a private certificate authority.
  # Create a generic secret for each cert, and add it to the list below.
  # Each secret must have a data entry for 'cert.pem'
  # Example command: `kubectl create secret generic private-root-ca --from-file=cert.pem=./<your-certificate-filepath>`
  # privateCaCerts:
  # - private-root-ca

  # Enable privateCaCertsAddToHost only when your nodes do not already
  # include the private CA in their docker trust store.
  # Most enterprises already have this configured,
  # and in that case 'enabled' should be false.
  # privateCaCertsAddToHost:
  #   enabled: true
  #   hostDirectory: /etc/docker/certs.d
  # For development or proof-of-concept, you can use an in-cluster database
  postgresqlEnabled: true

  # Enables using SSL connections to
  # encrypt client/server communication
  # between databases and the Astronomer platform.
  # If your database enforces SSL for connections,
  # change this value to true
  ssl:
    enabled: false
#################################
### Nginx configuration
#################################
nginx:
  # IP address the nginx ingress should bind to
  loadBalancerIP: ~
  #  Set to 'true' when deploying to a private EKS cluster
  privateLoadBalancer: false
  # Dict of arbitrary annotations to add to the nginx ingress. For full configuration options, see https://docs.nginx.com/nginx-ingress-controller/configuration/ingress-resources/advanced-configuration-with-annotations/
 ## ingressAnnotations:
 ##   service.beta.kubernetes.io/aws-load-balancer-type: nlb # Change to 'elb' if your node group is private and doesn't utilize a NAT gateway
 ##   service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-west-1:xxxx:certificate/xxxx
    
 ##   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ssl
    

#################################
### SMTP configuration
#################################

astronomer:
  houston:
    config:
##      logging:
##        level: debug
      publicSignups: false # Users need to be invited to have access to Astronomer. Set to true otherwise
      emailConfirmation: false # Users get an email verification before accessing Astronomer
      deployments:
        enableUpdateDeploymentImageEndpoint: true
        hardDeleteDeployment: true
        configureDagDeployment: true
        gitSyncDagDeployment: true
        manualReleaseNames: true # Allows you to set your release names
        serviceAccountAnnotationKey: eks.amazonaws.com/role-arn # Flag to enable using IAM roles (don't enter a specific role)
      email:
        enabled: true
        reply: "noreply@astronomer.io" # Emails will be sent from this address
      auth:
        github:
          enabled: false # Lets users authenticate with Github
        local:
          enabled: true # Disables logging in with just a username and password
        openidConnect:
          google:
            enabled: true # Lets users authenticate with Google

# to enable SMTP ---- 
#    secret:
#    - envName: "EMAIL__SMTP_URL"
#      secretName: "astronomer-smtp"
#      secretKey: "connection" 
